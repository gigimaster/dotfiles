#!/bin/sh
#

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

if [ "$allownonascii" != "true" ] &&
	test $(git diff --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.
This can cause problems if you want to work with people on other platforms.
To be portable it is advisable to rename the file.
If you know what you are doing you can disable this check using:
  git config hooks.allownonascii true
EOF
	exit 1
fi

changed_files=`git diff-index --cached --name-only $against --`
enum=0
errors=""
for one_file in $changed_files;do
    ext=${one_file##*.}
    if test "$ext" = "py" ;then
        if test -e "$one_file";then
            result=`pylint --load-plugins pylint_flask -rn $one_file 2>/dev/null`
            if [ -n "${result}" ];then
                echo "Begin detect file: "$one_file
                echo "${result}\n"
            fi

            ###switch error cant commit####
            tmp_errors=`pylint --load-plugins pylint_flask -rn -E $one_file 2>/dev/null`
            if [ -n "${tmp_errors}" ];then
                tmp_errors="Begin detect file: "$one_file"\n"$tmp_errors
                errors=$errors$tmp_errors
                enum=1
            fi
        fi
    fi
done

if [ $enum -gt 0 ];then
    echo "ERRORS!!!!!!"
    echo "${errors}"
    exit 1
else
    echo "no problem"
    exit 0
fi



